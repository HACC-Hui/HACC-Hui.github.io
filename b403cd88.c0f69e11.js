(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{128:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return d}));var o=t(2),i=t(6),r=(t(0),t(140)),a={title:"Setup HTTPS"},l={id:"developers/deployment/howto/setup-https",title:"Setup HTTPS",description:"Although the RadGrad application is available over HTTP on port 8888, with a few simple steps, you can easily request",source:"@site/docs/developers/deployment/howto/setup-https.md",permalink:"/docs/developers/deployment/howto/setup-https",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/developers/deployment/howto/setup-https.md",sidebar:"someSidebar",previous:{title:"Docker management",permalink:"/docs/developers/deployment/howto/docker-management"}},c=[{value:"Modify the nginx.env configuration file",id:"modify-the-nginxenv-configuration-file",children:[]},{value:"Perform a test run with LETSENCRYPT_STAGING_MODE = 1",id:"perform-a-test-run-with-letsencrypt_staging_mode--1",children:[]}],p={rightToc:c};function d(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Although the RadGrad application is available over HTTP on port 8888, with a few simple steps, you can easily request\nSSL certificates for your domain (from Let's Encrypt) and have your application running over HTTPS instead."),Object(r.b)("p",null,"As part of your RadGra installation, we include the ",Object(r.b)("inlineCode",{parentName:"p"},"nginx")," and ",Object(r.b)("inlineCode",{parentName:"p"},"certbot")," services to handle the legwork of setting\nup HTTPS. More specifically, an Nginx web server on port 80 is automatically configured to forward HTTP traffic to an\nHTTPS web server on port 443, which subsequently reverse proxies traffic to the RadGrad application on port 8888."),Object(r.b)("p",null,"As such, please make sure that your host machine has port 80 and 443 open to the outside world. It is also recommended\nthat you setup a firewall on port 8888 once you have HTTPS up and running, otherwise the View application will still\nbe accessible over HTTP on port 8888."),Object(r.b)("h2",{id:"modify-the-nginxenv-configuration-file"},"Modify the nginx.env configuration file"),Object(r.b)("p",null,"To begin, you will need to modify some of the configuration variables in the ",Object(r.b)("inlineCode",{parentName:"p"},"opq-docker/config/nginx/nginx.env")," file.\nThis configuration file should have already been copied over from the ",Object(r.b)("inlineCode",{parentName:"p"},"sample-config")," directory earlier during the OPQ\nCloud setup process."),Object(r.b)("p",null,"This file contains a few variables that you will need to modify. It looks like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-shell"}),"NGINX_SERVER_NAME=example.org\nLETSENCRYPT_EMAIL=user@example.org\nLETSENCRYPT_STAGING_MODE=1\n")),Object(r.b)("p",null,"Modify the ",Object(r.b)("inlineCode",{parentName:"p"},"NGINX_SERVER_NAME")," variable with the domain name pointing to your host machine."),Object(r.b)("p",null,"Then, modify the ",Object(r.b)("inlineCode",{parentName:"p"},"LETSENCRYPT_EMAIL")," variable with an email address that should be associated with the SSL certificate\ngenerated for the given domain name."),Object(r.b)("p",null,"Leave the ",Object(r.b)("inlineCode",{parentName:"p"},"LETSENCRYPT_STAGING_MODE")," variable set to ",Object(r.b)("inlineCode",{parentName:"p"},"1")," for the time being. This will ensure that you do not hit any\ncertificate request limit while testing your HTTPS configuration."),Object(r.b)("p",null,"Your ",Object(r.b)("inlineCode",{parentName:"p"},"nginx.env")," file should now look something like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-shell"}),"NGINX_SERVER_NAME=emilia.ics.hawaii.edu\nLETSENCRYPT_EMAIL=admin@openpowerquality.org\nLETSENCRYPT_STAGING_MODE=1\n")),Object(r.b)("h2",{id:"perform-a-test-run-with-letsencrypt_staging_mode--1"},"Perform a test run with LETSENCRYPT_STAGING_MODE = 1"),Object(r.b)("p",null,"Before we begin, ensure that all OPQ Cloud services are shut down by changing into the ",Object(r.b)("inlineCode",{parentName:"p"},"opq-docker")," directory and\ninvoking ",Object(r.b)("inlineCode",{parentName:"p"},"docker-compose down"),"."),Object(r.b)("p",null,"Then, invoke the ",Object(r.b)("inlineCode",{parentName:"p"},"init-letsencrypt.sh")," script and follow the prompts. It should look something like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-shell"}),'opquser@emilia:~/opq-docker$ ./init-letsencrypt.sh\nExisting data found for emilia.ics.hawaii.edu. Continue and replace existing certificate? (y/N) y\n### Creating dummy certificate for emilia.ics.hawaii.edu ...\nWARNING: The NGINX_SERVER_NAME variable is not set. Defaulting to a blank string.\nCreating network "opq-docker_default" with the default driver\nCreating opq-docker_boxupdateserver_1 ... done\nCreating opq-mongo                    ... done\nCreating opq-docker_view_1            ... done\nCreating opq-docker_nginx_1           ... done\nGenerating a RSA private key\n........................+++++\n............+++++\nwriting new private key to \'/etc/letsencrypt/live/emilia.ics.hawaii.edu/privkey.pem\'\n-----\n\n### Starting nginx ...\nWARNING: The NGINX_SERVER_NAME variable is not set. Defaulting to a blank string.\nStopping opq-docker_view_1            ... done\nStopping opq-mongo                    ... done\nStopping opq-docker_boxupdateserver_1 ... done\nRemoving opq-docker_nginx_1           ... done\nRemoving opq-docker_view_1            ... done\nRemoving opq-mongo                    ... done\nRemoving opq-docker_boxupdateserver_1 ... done\nRemoving network opq-docker_default\nCreating network "opq-docker_default" with the default driver\nCreating opq-mongo                    ... done\nCreating opq-docker_boxupdateserver_1 ... done\nCreating opq-docker_view_1            ... done\nCreating opq-docker_makai_1           ... done\nCreating opq-docker_nginx_1           ... done\nCreating opq-docker_mauka_1           ... done\nCreating opq-docker_certbot_1         ... done\nCreating opq-docker_health_1          ... done\n\n### Deleting dummy certificate for emilia.ics.hawaii.edu ...\nStarting opq-docker_boxupdateserver_1 ... done\nStarting opq-mongo                    ... done\nStarting opq-docker_view_1            ... done\nStarting opq-docker_nginx_1           ... done\n\n### Requesting Let\'s Encrypt certificate for emilia.ics.hawaii.edu ...\nStarting opq-docker_boxupdateserver_1 ... done\nStarting opq-mongo                    ... done\nStarting opq-docker_view_1            ... done\nStarting opq-docker_nginx_1           ... done\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator webroot, Installer None\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nWould you be willing to share your email address with the Electronic Frontier\nFoundation, a founding partner of the Let\'s Encrypt project and the non-profit\norganization that develops Certbot? We\'d like to send you email about our work\nencrypting the web, EFF news, campaigns, and ways to support digital freedom.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n(Y)es/(N)o: Y\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for emilia.ics.hawaii.edu\nUsing the webroot path /var/www/certbot for all unmatched domains.\nWaiting for verification...\nCleaning up challenges\n\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/emilia.ics.hawaii.edu/fullchain.pem\n   Your key file has been saved at:\n   /etc/letsencrypt/live/emilia.ics.hawaii.edu/privkey.pem\n   Your cert will expire on 2019-06-29. To obtain a new or tweaked\n   version of this certificate in the future, simply run certbot\n   again. To non-interactively renew *all* of your certificates, run\n   "certbot renew"\n\n### Reloading nginx ...\n2019/03/31 21:58:34 [notice] 10#10: signal process started\n')),Object(r.b)("p",null,"Now, verify that the (fake) SSL certificate was properly generated by opening up your web browser and\nvisiting your View application at the domain name that you specified. Each web browser application should have a way\nto display the SSL certificates of the web site being visited. On Chrome, it should look similar to this:"),Object(r.b)("p",null,Object(r.b)("img",Object(o.a)({parentName:"p"},{src:"https://openpowerquality.org/docs/assets/cloud/https-setup-1.png",alt:null}))),Object(r.b)("h4",{id:"request-real-ssl-certificate-with-letsencrypt_staging_mode--0"},"Request real SSL certificate with LETSENCRYPT_STAGING_MODE = 0"),Object(r.b)("p",null,"Now that everything looks good, we can now go ahead and request a real SSL certificate!"),Object(r.b)("p",null,"First, shut down all OPQ Cloud services by changing into the ",Object(r.b)("inlineCode",{parentName:"p"},"opq-docker")," directory and invoking ",Object(r.b)("inlineCode",{parentName:"p"},"docker-compose down"),"."),Object(r.b)("p",null,"Then, open the ",Object(r.b)("inlineCode",{parentName:"p"},"opq-docker/config/nginx/nginx.env")," file and set the ",Object(r.b)("inlineCode",{parentName:"p"},"LETSENCRYPT_STAGING_MODE")," variable to ",Object(r.b)("inlineCode",{parentName:"p"},"0"),".\nThe file should now look something like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-shell"}),"NGINX_SERVER_NAME=emilia.ics.hawaii.edu\nLETSENCRYPT_EMAIL=admin@openpowerquality.org\nLETSENCRYPT_STAGING_MODE=0\n")),Object(r.b)("p",null,"Finally, invoke the ",Object(r.b)("inlineCode",{parentName:"p"},"init-letsencrypt.sh")," script and follow the prompts. The output should be nearly identical to\nthat of the test run that was performed earlier:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-shell"}),'opquser@emilia:~/opq-docker$ ./init-letsencrypt.sh\nExisting data found for emilia.ics.hawaii.edu. Continue and replace existing certificate? (y/N) y\n### Creating dummy certificate for emilia.ics.hawaii.edu ...\nWARNING: The NGINX_SERVER_NAME variable is not set. Defaulting to a blank string.\nCreating network "opq-docker_default" with the default driver\nCreating opq-docker_boxupdateserver_1 ... done\nCreating opq-mongo                    ... done\nCreating opq-docker_view_1            ... done\nCreating opq-docker_nginx_1           ... done\nGenerating a RSA private key\n.............................................+++++\n............................+++++\nwriting new private key to \'/etc/letsencrypt/live/emilia.ics.hawaii.edu/privkey.pem\'\n-----\n\n### Starting nginx ...\nWARNING: The NGINX_SERVER_NAME variable is not set. Defaulting to a blank string.\nStopping opq-docker_view_1            ... done\nStopping opq-mongo                    ... done\nStopping opq-docker_boxupdateserver_1 ... done\nRemoving opq-docker_nginx_1           ... done\nRemoving opq-docker_view_1            ... done\nRemoving opq-mongo                    ... done\nRemoving opq-docker_boxupdateserver_1 ... done\nRemoving network opq-docker_default\nCreating network "opq-docker_default" with the default driver\nCreating opq-docker_boxupdateserver_1 ... done\nCreating opq-mongo                    ... done\nCreating opq-docker_view_1            ... done\nCreating opq-docker_makai_1           ... done\nCreating opq-docker_nginx_1           ... done\nCreating opq-docker_mauka_1           ... done\nCreating opq-docker_certbot_1         ... done\nCreating opq-docker_health_1          ... done\n\n### Deleting dummy certificate for emilia.ics.hawaii.edu ...\nStarting opq-docker_boxupdateserver_1 ... done\nStarting opq-mongo                    ... done\nStarting opq-docker_view_1            ... done\nStarting opq-docker_nginx_1           ... done\n\n### Requesting Let\'s Encrypt certificate for emilia.ics.hawaii.edu ...\nStarting opq-docker_boxupdateserver_1 ... done\nStarting opq-mongo                    ... done\nStarting opq-docker_view_1            ... done\nStarting opq-docker_nginx_1           ... done\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator webroot, Installer None\nObtaining a new certificate\n\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/emilia.ics.hawaii.edu/fullchain.pem\n   Your key file has been saved at:\n   /etc/letsencrypt/live/emilia.ics.hawaii.edu/privkey.pem\n   Your cert will expire on 2019-06-29. To obtain a new or tweaked\n   version of this certificate in the future, simply run certbot\n   again. To non-interactively renew *all* of your certificates, run\n   "certbot renew"\n - If you like Certbot, please consider supporting our work by:\n\n   Donating to ISRG / Let\'s Encrypt:   https://letsencrypt.org/donate\n   Donating to EFF:                    https://eff.org/donate-le\n\n\n### Reloading nginx ...\n2019/03/31 22:03:14 [notice] 10#10: signal process started\n')),Object(r.b)("p",null,"Verify that the SSL certificate was properly generated by opening up your web browser and visiting the View\napplication at the domain name that you specified. On Chrome, it should look similar to this:"),Object(r.b)("p",null,Object(r.b)("img",Object(o.a)({parentName:"p"},{src:"https://openpowerquality.org/docs/assets/cloud/https-setup-2.png",alt:null}))),Object(r.b)("p",null,"You're done!"))}d.isMDXComponent=!0},140:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return b}));var o=t(0),i=t.n(o);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=i.a.createContext({}),d=function(e){var n=i.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=d(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},g=i.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=d(t),g=o,b=s["".concat(a,".").concat(g)]||s[g]||u[g]||r;return t?i.a.createElement(b,l(l({ref:n},p),{},{components:t})):i.a.createElement(b,l({ref:n},p))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=g;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<r;p++)a[p]=t[p];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}g.displayName="MDXCreateElement"}}]);